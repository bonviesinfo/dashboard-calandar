# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push:
    branches:
      - main

name: Build and Deploy to Cloud Run

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: calendar-dashboard
  # SERVICE: drvet-materialui-pobonvies
  # SERVICE: api-in-drvet-pobonvies
  # SERVICE: file-drvet-pobonvies
  REGION: asia-east1

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # # Configure Workload Identity Federation and generate an access token.
      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
      #     service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

      # Alternative option - authentication via credentials json
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t asia.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push asia.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --image asia.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
            --platform "managed" \
            --allow-unauthenticated \
            
            --quiet
  # --add-cloudsql-instances=drvet-server-sysstore-bonvies:asia-east1:bonvies-postgresql \

# --add-cloudsql-instances=drvet-server-sysstore-bonvies:asia-east1:go-mysql

# In run
# --vpc-connector=drvet-vpc-connectors \
# --vpc-egress=all-traffic \
